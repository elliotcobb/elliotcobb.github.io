{"ast":null,"code":"import _classCallCheck from \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/src/WallView.js\";\nimport React, { Component } from 'react';\nimport WALL_DATA from './WallData.json';\nimport { isMobile } from './helpers';\nimport Groups from './Groups';\nimport IntroModal from './IntroModal';\nimport Mediums from './Mediums';\nimport Menu from './Menu';\nimport MobileInfoWindow from './MobileInfoWindow';\nimport Sticky from './Sticky';\nimport './WallView.css';\n\nvar WallView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WallView, _Component);\n\n  function WallView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WallView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WallView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isIntroModalDismissed: false,\n      openSticky: undefined,\n      userFavorite: undefined\n    };\n\n    _this.handleIntroModalDismiss = function () {\n      _this.setState({\n        isIntroModalDismissed: true\n      });\n    };\n\n    _this.onFavoriteSelected = function (id) {\n      if (_this.state.userFavorite === id) {\n        _this.setState({\n          userFavorite: undefined\n        });\n\n        return;\n      }\n\n      _this.setState({\n        userFavorite: id\n      }); // make favoriteSelected event call\n\n    };\n\n    _this.onMouseLeave = function () {\n      _this.setState({\n        openSticky: undefined\n      });\n    };\n\n    _this.onStickyClick = function (id) {\n      _this.setState({\n        openSticky: id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WallView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var windowWidth = window.innerWidth;\n\n      if (isMobile()) {\n        // scroll to center of page on mobile\n        window.scrollTo(windowWidth * 2, windowWidth * 2);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isIntroModalDismissed = _this$state.isIntroModalDismissed,\n          openSticky = _this$state.openSticky,\n          userFavorite = _this$state.userFavorite;\n      return React.createElement(\"div\", {\n        className: \"wallView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"wallView-image\",\n        alt: \"sticky note wall\",\n        src: \"/wall.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), WALL_DATA.map(function (_ref) {\n        var groups = _ref.groups,\n            id = _ref.id,\n            leastFavoritesExplanation = _ref.leastFavoritesExplanation,\n            mediums = _ref.mediums,\n            story = _ref.story,\n            xCoord = _ref.xCoord,\n            yCoord = _ref.yCoord;\n        return React.createElement(React.Fragment, null, React.createElement(Sticky, {\n          key: id,\n          isStickySelected: openSticky === id,\n          onClick: function onClick() {\n            return _this2.onStickyClick(id);\n          },\n          onMouseLeave: _this2.onMouseLeave,\n          xCoord: xCoord,\n          yCoord: yCoord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Mediums, {\n          mediums: mediums,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(Groups, {\n          groups: groups,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), leastFavoritesExplanation && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"It's a least favorite because: \", leastFavoritesExplanation), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, story), React.createElement(\"button\", {\n          className: \"wallView-favoriteButton\",\n          onClick: function onClick() {\n            return _this2.onFavoriteSelected(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, userFavorite === id ? 'favorited!' : 'Mark as your favorite')));\n      }), openSticky && isMobile() && React.createElement(MobileInfoWindow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, JSON.stringify(WALL_DATA[openSticky].mediums)), isIntroModalDismissed && React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), !isIntroModalDismissed && React.createElement(IntroModal, {\n        onDismiss: this.handleIntroModalDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WallView;\n}(Component);\n\nexport default WallView;","map":{"version":3,"sources":["/Users/elliotcobb/Documents/projects/personal/stickyNoteMap/sticky-note-app/src/WallView.js"],"names":["React","Component","WALL_DATA","isMobile","Groups","IntroModal","Mediums","Menu","MobileInfoWindow","Sticky","WallView","state","isIntroModalDismissed","openSticky","undefined","userFavorite","handleIntroModalDismiss","setState","onFavoriteSelected","id","onMouseLeave","onStickyClick","windowWidth","window","innerWidth","scrollTo","map","groups","leastFavoritesExplanation","mediums","story","xCoord","yCoord","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport WALL_DATA from './WallData.json';\nimport {isMobile} from './helpers';\n\nimport Groups from './Groups';\nimport IntroModal from './IntroModal';\nimport Mediums from './Mediums';\nimport Menu from './Menu';\nimport MobileInfoWindow from './MobileInfoWindow';\nimport Sticky from './Sticky';\n\nimport './WallView.css';\n\nclass WallView extends Component {\n  state = {\n    isIntroModalDismissed: false,\n    openSticky: undefined,\n    userFavorite: undefined,\n  };\n\n  componentDidMount() {\n    const windowWidth = window.innerWidth;\n\n    if (isMobile()) {\n      // scroll to center of page on mobile\n      window.scrollTo(windowWidth * 2, windowWidth * 2);      \n    }\n  }\n\n  handleIntroModalDismiss = () => {\n    this.setState({isIntroModalDismissed: true});\n  }\n\n  onFavoriteSelected = (id) => {\n    if (this.state.userFavorite === id) {\n      this.setState({userFavorite: undefined});\n      return;\n    }\n\n    this.setState({userFavorite: id});\n    // make favoriteSelected event call\n  }\n\n  onMouseLeave = () => {\n    this.setState({openSticky: undefined});\n  }\n\n  onStickyClick = (id) => {\n    this.setState({openSticky: id});\n  }\n\n  render() {\n    const {isIntroModalDismissed, openSticky, userFavorite} = this.state;\n    return (\n      <div className=\"wallView\">\n        <img className=\"wallView-image\" alt=\"sticky note wall\" src=\"/wall.jpg\" />\n        {WALL_DATA.map(({groups, id, leastFavoritesExplanation, mediums, story, xCoord, yCoord}) => (\n          <>\n            <Sticky\n              key={id}\n              isStickySelected={openSticky === id}\n              onClick={() => this.onStickyClick(id)}\n              onMouseLeave={this.onMouseLeave}\n              xCoord={xCoord}\n              yCoord={yCoord}\n            >\n              <Mediums mediums={mediums} />\n              <Groups groups={groups} />\n              {leastFavoritesExplanation && (<div>It's a least favorite because: {leastFavoritesExplanation}</div>)}\n              <p>{story}</p>\n              <button\n                className=\"wallView-favoriteButton\"\n                onClick={() => this.onFavoriteSelected(id)}\n              >\n                {userFavorite === id ? 'favorited!' : 'Mark as your favorite'}\n              </button>\n            </Sticky>\n          </>\n        ))}\n        {openSticky && isMobile() && (\n          <MobileInfoWindow>\n            {JSON.stringify(WALL_DATA[openSticky].mediums)}\n          </MobileInfoWindow>\n        )}\n        {isIntroModalDismissed && <Menu />}\n        {!isIntroModalDismissed && <IntroModal onDismiss={this.handleIntroModalDismiss} />}\n      </div>\n    );\n  }\n}\n\nexport default WallView;\n"]},"metadata":{},"sourceType":"module"}